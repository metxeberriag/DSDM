/*
* generated by Xtext
*/
package politicianBiDsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import politicianBiDsl.services.PBiDslGrammarAccess;

public class PBiDslParser extends AbstractContentAssistParser {
	
	@Inject
	private PBiDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected politicianBiDsl.ui.contentassist.antlr.internal.InternalPBiDslParser createParser() {
		politicianBiDsl.ui.contentassist.antlr.internal.InternalPBiDslParser result = new politicianBiDsl.ui.contentassist.antlr.internal.InternalPBiDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getPoliticianAccess().getAlternatives(), "rule__Politician__Alternatives");
					put(grammarAccess.getCityAccess().getGroup(), "rule__City__Group__0");
					put(grammarAccess.getCityAccess().getGroup_3(), "rule__City__Group_3__0");
					put(grammarAccess.getCityAccess().getGroup_3_3(), "rule__City__Group_3_3__0");
					put(grammarAccess.getCityAccess().getGroup_7(), "rule__City__Group_7__0");
					put(grammarAccess.getPartyAccess().getGroup(), "rule__Party__Group__0");
					put(grammarAccess.getPartyAccess().getGroup_10(), "rule__Party__Group_10__0");
					put(grammarAccess.getPolitician_ImplAccess().getGroup(), "rule__Politician_Impl__Group__0");
					put(grammarAccess.getPublicOfficeAccess().getGroup(), "rule__PublicOffice__Group__0");
					put(grammarAccess.getCityAccess().getNameAssignment_1(), "rule__City__NameAssignment_1");
					put(grammarAccess.getCityAccess().getPartiesAssignment_3_2(), "rule__City__PartiesAssignment_3_2");
					put(grammarAccess.getCityAccess().getPartiesAssignment_3_3_1(), "rule__City__PartiesAssignment_3_3_1");
					put(grammarAccess.getCityAccess().getIndepsAssignment_6(), "rule__City__IndepsAssignment_6");
					put(grammarAccess.getCityAccess().getIndepsAssignment_7_1(), "rule__City__IndepsAssignment_7_1");
					put(grammarAccess.getPartyAccess().getNameAssignment_1(), "rule__Party__NameAssignment_1");
					put(grammarAccess.getPartyAccess().getAcronymAssignment_4(), "rule__Party__AcronymAssignment_4");
					put(grammarAccess.getPartyAccess().getPresidentAssignment_6(), "rule__Party__PresidentAssignment_6");
					put(grammarAccess.getPartyAccess().getPolsAssignment_9(), "rule__Party__PolsAssignment_9");
					put(grammarAccess.getPartyAccess().getPolsAssignment_10_1(), "rule__Party__PolsAssignment_10_1");
					put(grammarAccess.getPolitician_ImplAccess().getNameAssignment_1(), "rule__Politician_Impl__NameAssignment_1");
					put(grammarAccess.getPolitician_ImplAccess().getAgeAssignment_4(), "rule__Politician_Impl__AgeAssignment_4");
					put(grammarAccess.getPolitician_ImplAccess().getSexAssignment_6(), "rule__Politician_Impl__SexAssignment_6");
					put(grammarAccess.getPublicOfficeAccess().getNameAssignment_1(), "rule__PublicOffice__NameAssignment_1");
					put(grammarAccess.getPublicOfficeAccess().getAgeAssignment_4(), "rule__PublicOffice__AgeAssignment_4");
					put(grammarAccess.getPublicOfficeAccess().getSexAssignment_6(), "rule__PublicOffice__SexAssignment_6");
					put(grammarAccess.getPublicOfficeAccess().getInstNameAssignment_8(), "rule__PublicOffice__InstNameAssignment_8");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			politicianBiDsl.ui.contentassist.antlr.internal.InternalPBiDslParser typedParser = (politicianBiDsl.ui.contentassist.antlr.internal.InternalPBiDslParser) parser;
			typedParser.entryRuleCity();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public PBiDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(PBiDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
