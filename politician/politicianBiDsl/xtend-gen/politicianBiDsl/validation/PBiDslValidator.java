/**
 * generated by Xtext
 */
package politicianBiDsl.validation;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.xtext.validation.Check;
import politicianBiDsl.pBiDsl.City;
import politicianBiDsl.pBiDsl.PBiDslPackage;
import politicianBiDsl.pBiDsl.Party;
import politicianBiDsl.pBiDsl.Politician;
import politicianBiDsl.validation.AbstractPBiDslValidator;

/**
 * Custom validation rules.
 * 
 * see http://www.eclipse.org/Xtext/documentation.html#validation
 */
@SuppressWarnings("all")
public class PBiDslValidator extends AbstractPBiDslValidator {
  public final static String INVALID_ENTITY_NAME = "politicianBiDsl.pBiDsl.InvalidCityName";
  
  public final static String INVALID_PRESIDENT = "politicianBiDsl.pBiDsl.InvalidPresident";
  
  @Check
  public void checkGreetingStartsWithCapital(final City city) {
    String _name = city.getName();
    char _charAt = _name.charAt(0);
    boolean _isUpperCase = Character.isUpperCase(_charAt);
    boolean _not = (!_isUpperCase);
    if (_not) {
      EAttribute _city_Name = PBiDslPackage.eINSTANCE.getCity_Name();
      String _name_1 = city.getName();
      this.warning("Name should start with a capital", _city_Name, 
        PBiDslValidator.INVALID_ENTITY_NAME, _name_1);
    }
  }
  
  @Check
  public void PresidentIsAPolitician(final Party party) {
    Politician _president = party.getPresident();
    Class<? extends Politician> _class = _president.getClass();
    boolean _isInstance = _class.isInstance(Politician.class);
    if (_isInstance) {
      EAttribute _politician_Name = PBiDslPackage.eINSTANCE.getPolitician_Name();
      Politician _president_1 = party.getPresident();
      String _name = _president_1.getName();
      this.warning("President should be a Politician", _politician_Name, 
        PBiDslValidator.INVALID_PRESIDENT, _name);
    }
  }
}
