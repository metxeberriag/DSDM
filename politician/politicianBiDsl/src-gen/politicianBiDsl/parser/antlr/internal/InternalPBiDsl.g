/*
* generated by Xtext
*/
grammar InternalPBiDsl;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package politicianBiDsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package politicianBiDsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import politicianBiDsl.services.PBiDslGrammarAccess;

}

@parser::members {

 	private PBiDslGrammarAccess grammarAccess;
 	
    public InternalPBiDslParser(TokenStream input, PBiDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "City";	
   	}
   	
   	@Override
   	protected PBiDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleCity
entryRuleCity returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCityRule()); }
	 iv_ruleCity=ruleCity 
	 { $current=$iv_ruleCity.current; } 
	 EOF 
;

// Rule City
ruleCity returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='City' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getCityAccess().getCityKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getCityAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getCityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getCityAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='parties' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getCityAccess().getPartiesKeyword_3_0());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getCityAccess().getLeftCurlyBracketKeyword_3_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCityAccess().getPartiesPartyParserRuleCall_3_2_0()); 
	    }
		lv_parties_5_0=ruleParty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCityRule());
	        }
       		add(
       			$current, 
       			"parties",
        		lv_parties_5_0, 
        		"Party");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getCityAccess().getCommaKeyword_3_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCityAccess().getPartiesPartyParserRuleCall_3_3_1_0()); 
	    }
		lv_parties_7_0=ruleParty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCityRule());
	        }
       		add(
       			$current, 
       			"parties",
        		lv_parties_7_0, 
        		"Party");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getCityAccess().getRightCurlyBracketKeyword_3_4());
    }
)?	otherlv_9='indeps' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getCityAccess().getIndepsKeyword_4());
    }
	otherlv_10='{' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getCityAccess().getLeftCurlyBracketKeyword_5());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCityAccess().getIndepsPoliticianParserRuleCall_6_0()); 
	    }
		lv_indeps_11_0=rulePolitician		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCityRule());
	        }
       		add(
       			$current, 
       			"indeps",
        		lv_indeps_11_0, 
        		"Politician");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_12=',' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getCityAccess().getCommaKeyword_7_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getCityAccess().getIndepsPoliticianParserRuleCall_7_1_0()); 
	    }
		lv_indeps_13_0=rulePolitician		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCityRule());
	        }
       		add(
       			$current, 
       			"indeps",
        		lv_indeps_13_0, 
        		"Politician");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_14='}' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getCityAccess().getRightCurlyBracketKeyword_8());
    }
	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getCityAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleParty
entryRuleParty returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPartyRule()); }
	 iv_ruleParty=ruleParty 
	 { $current=$iv_ruleParty.current; } 
	 EOF 
;

// Rule Party
ruleParty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Party' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPartyAccess().getPartyKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPartyAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPartyAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='acronym' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPartyAccess().getAcronymKeyword_3());
    }
(
(
		lv_acronym_4_0=RULE_STRING
		{
			newLeafNode(lv_acronym_4_0, grammarAccess.getPartyAccess().getAcronymSTRINGTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartyRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"acronym",
        		lv_acronym_4_0, 
        		"STRING");
	    }

)
)	otherlv_5='president' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPartyAccess().getPresidentKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPartyRule());
	        }
        }
	otherlv_6=RULE_ID
	{
		newLeafNode(otherlv_6, grammarAccess.getPartyAccess().getPresidentPoliticianCrossReference_6_0()); 
	}

)
)	otherlv_7='pols' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPartyAccess().getPolsKeyword_7());
    }
	otherlv_8='[' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getPartyAccess().getLeftSquareBracketKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartyAccess().getPolsPoliticianParserRuleCall_9_0()); 
	    }
		lv_pols_9_0=rulePolitician		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartyRule());
	        }
       		add(
       			$current, 
       			"pols",
        		lv_pols_9_0, 
        		"Politician");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getPartyAccess().getCommaKeyword_10_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPartyAccess().getPolsPoliticianParserRuleCall_10_1_0()); 
	    }
		lv_pols_11_0=rulePolitician		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPartyRule());
	        }
       		add(
       			$current, 
       			"pols",
        		lv_pols_11_0, 
        		"Politician");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12=']' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getPartyAccess().getRightSquareBracketKeyword_11());
    }
	otherlv_13='}' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getPartyAccess().getRightCurlyBracketKeyword_12());
    }
)
;





// Entry rule entryRulePolitician
entryRulePolitician returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPoliticianRule()); }
	 iv_rulePolitician=rulePolitician 
	 { $current=$iv_rulePolitician.current; } 
	 EOF 
;

// Rule Politician
rulePolitician returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getPoliticianAccess().getPolitician_ImplParserRuleCall_0()); 
    }
    this_Politician_Impl_0=rulePolitician_Impl
    { 
        $current = $this_Politician_Impl_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getPoliticianAccess().getPublicOfficeParserRuleCall_1()); 
    }
    this_PublicOffice_1=rulePublicOffice
    { 
        $current = $this_PublicOffice_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRulePolitician_Impl
entryRulePolitician_Impl returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPolitician_ImplRule()); }
	 iv_rulePolitician_Impl=rulePolitician_Impl 
	 { $current=$iv_rulePolitician_Impl.current; } 
	 EOF 
;

// Rule Politician_Impl
rulePolitician_Impl returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Politician' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPolitician_ImplAccess().getPoliticianKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPolitician_ImplAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolitician_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPolitician_ImplAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='age' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPolitician_ImplAccess().getAgeKeyword_3());
    }
(
(
		lv_age_4_0=RULE_INT
		{
			newLeafNode(lv_age_4_0, grammarAccess.getPolitician_ImplAccess().getAgeINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolitician_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"age",
        		lv_age_4_0, 
        		"INT");
	    }

)
)	otherlv_5='sex' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPolitician_ImplAccess().getSexKeyword_5());
    }
(
(
		lv_sex_6_0=RULE_STRING
		{
			newLeafNode(lv_sex_6_0, grammarAccess.getPolitician_ImplAccess().getSexSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPolitician_ImplRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sex",
        		lv_sex_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPolitician_ImplAccess().getRightCurlyBracketKeyword_7());
    }
)
;





// Entry rule entryRulePublicOffice
entryRulePublicOffice returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPublicOfficeRule()); }
	 iv_rulePublicOffice=rulePublicOffice 
	 { $current=$iv_rulePublicOffice.current; } 
	 EOF 
;

// Rule PublicOffice
rulePublicOffice returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='PublicOffice' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getPublicOfficeAccess().getPublicOfficeKeyword_0());
    }
(
(
		lv_name_1_0=RULE_STRING
		{
			newLeafNode(lv_name_1_0, grammarAccess.getPublicOfficeAccess().getNameSTRINGTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublicOfficeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"STRING");
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getPublicOfficeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='age' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getPublicOfficeAccess().getAgeKeyword_3());
    }
(
(
		lv_age_4_0=RULE_INT
		{
			newLeafNode(lv_age_4_0, grammarAccess.getPublicOfficeAccess().getAgeINTTerminalRuleCall_4_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublicOfficeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"age",
        		lv_age_4_0, 
        		"INT");
	    }

)
)	otherlv_5='sex' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getPublicOfficeAccess().getSexKeyword_5());
    }
(
(
		lv_sex_6_0=RULE_STRING
		{
			newLeafNode(lv_sex_6_0, grammarAccess.getPublicOfficeAccess().getSexSTRINGTerminalRuleCall_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublicOfficeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"sex",
        		lv_sex_6_0, 
        		"STRING");
	    }

)
)	otherlv_7='instName' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getPublicOfficeAccess().getInstNameKeyword_7());
    }
(
(
		lv_instName_8_0=RULE_STRING
		{
			newLeafNode(lv_instName_8_0, grammarAccess.getPublicOfficeAccess().getInstNameSTRINGTerminalRuleCall_8_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPublicOfficeRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"instName",
        		lv_instName_8_0, 
        		"STRING");
	    }

)
)	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getPublicOfficeAccess().getRightCurlyBracketKeyword_9());
    }
)
;





RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


